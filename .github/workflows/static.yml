# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 5

      - name: Check landing folder changes
        id: check_changes
        run: |
          CHANGED=$(git diff --name-only HEAD HEAD~1 | grep '^landing/' || true)
          if [ -z "$CHANGED" ]; then
            echo "No changes in landing folder, skipping deployment."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in landing folder."
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Pages
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "landing"

      - name: Deploy to GitHub Pages
        if: steps.check_changes.outputs.changes_detected == 'true'
        id: deployment
        uses: actions/deploy-pages@v4
